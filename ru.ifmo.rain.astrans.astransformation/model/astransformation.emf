@namespace(uri="http://rain.ifmo.ru/~breslav/2007/astransformation", prefix="astransformation")
package astransformation;

interface Named {
  attr String[1] name;
}

interface Typed {
  val ClassName[1] type;
}

class ClassName {
  attr String[1] name;
}

class Transformation extends Named {
  val MappingRule[*] mappingRules;
  ref MappingRule[1] main;
  val ClassName[1] resolverClassName;
  val ClassName[1] traceClassName;
  val ClassName[1] switchClassName;
}

class Parameter extends Named, Typed {
}

class MappingRule extends Named {
  val Parameter[1] parameter;
  val Parameter[1] result;
  val ClassName[1] factoryClassName;
  attr String[1] factoryMethodName;
  val AssignAttribute[*] assignAttributeStatements;
  val AssignReference[*] assignReferenceStatements;
  val WriteTrace[1] writeTraceStatement;
  val ResolveObject[*] resolveObjectStatements;
}

class AssignFeature {
  attr String[1] setterName; // will be a getter for many feature 
  attr String[1] getterName; 
  attr boolean many = false;
}

class AssignAttribute extends AssignFeature {
}

class AssignReference extends AssignFeature, Typed {
  attr boolean mappingNeeded = true;
}

class WriteTrace {
  attr String[1] traceMethodName;
}

class ResolveObject extends AssignFeature, Typed {
  val ClassName[1] parameterType;
  attr String[1] resolverMethodName;
}